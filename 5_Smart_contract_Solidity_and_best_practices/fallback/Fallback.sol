/* 
  La fonction Fallback
Les bonnes pratiques Solidity

üëâ Simplifier votre fonction fallback 
La fonction fallback est appel√© lorsqu‚Äôun message sans arguments est envoy√© √† un contrat ou lorsqu'aucune fonction ne correspond. 
Si vous souhaitez pouvoir recevoir de l'Ether d'un .send() ou d'un .transfer(), tout ce que vous pouvez faire dans une fonction de 
fallback est d'enregistrer un √©v√©nement et v√©rifier qu‚Äôelle n‚Äôest pas appel√©e par erreur.
 */

 // mauvais
function() payable { balances[msg.sender] += msg.value; }

// bon
function deposit() payable external { balances[msg.sender] += msg.value; }

function() payable { require(msg.data.length == 0); emit LogDepositReceived(msg.sender); }

/* 
  üëâ V√©rifier les donn√©es envoy√©es avec la fonction fallback
La fonction fallback n'est pas seulement appel√©e pour les transferts d'Ethers simples (sans donn√©es) mais aussi lorsqu'aucune autre fonction ne correspond, 
vous devez v√©rifier que les donn√©es sont vides si la fonction fallback est destin√©e √† √™tre utilis√©e uniquement pour l'enregistrement des Ethers re√ßus. 
Sinon, les appelants ne s'en apercevront pas si votre contrat est mal utilis√© et si des fonctions qui n'existent pas sont appel√©es.
 */

 // mauvais
function() payable { emit LogDepositReceived(msg.sender); }

// bon
function() payable { require(msg.data.length == 0); emit LogDepositReceived(msg.sender); }
