Outils pour g√©n√©rer de la documentation
Outils de s√©curit√© / Documentation
Ethereum Natural Language Specification Format (NatSpec)
Les smart contract Solidity peuvent avoir une forme particuli√®re de commentaires pour fournir une documentation riche pour les fonctions, les variables de retour et plus encore. Cette forme sp√©ciale s'appelle le format de sp√©cification du langage naturel Ethereum (natspec). Cette m√©thode est inspir√© d‚Äôune pratique √©quivalente en Javascript (JSDoc).

 

Les commentaires peuvent compl√©ter le contrat ou une fonction. Ils sont √©crits avant le contrat ou la fonction document√©.

 /**
 * @dev See {IERC20-approve}.
 *
 * Requirements:
 *
 * - `spender` cannot be the zero address.
 */
function approve(address spender, uint256 amount) public returns (bool) {
   _approve(_msgSender(), spender, amount);
   return true;
}
Exemple tir√© du contrat ERC20 de Open-Zeppellin https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20.sol

Les deux champs les plus utilis√©s sont @notice pour donner des informations g√©n√©rales et @dev pour donner des informations destin√©es aux d√©veloppeurs.
 

Exemple documentation : 
En se basant sur notre smart contract ERC20Token.sol (qui se repose sur la librairie d‚ÄôOpenZeppelin ERC20.sol), vous pouvez g√©n√©rer directement via Remix un document md via le plugin EthDoc. 

üîç Pour plus d‚Äôexplications, suivez ce lien. 

Le r√©sultat est stock√© directement sur ipfs et consultable via ce lien. 

 

Liste des outils pour g√©n√©rer de la documentation :
Remix Plugin (EthDoc) :  Solidity Documentation Generator  g√©n√®re un document md en se basant sur les natspec 
Doxity : g√©n√®re de la documentation pour solidity (fonctionne avec truffle) en se basant sur les natspec
Solidity-docgen : g√©n√®re de la documentation pour solidity en se basant sur les natspec

Pour plus de visuel vous pouvez utiliser des deux outils suivants :

Surya est un outil qui  fournit un certain nombre de r√©sultats visuels et d'informations sur la structure des smart contrats 
Solgraph G√©n√®re un graphique DOT qui visualise le flux de contr√¥le des fonctions d'un contrat Solidity et met en √©vidence les vuln√©rabilit√©s potentielles de s√©curit√©. 
 

Pour en savoir plus  :

A survey of attacks on Ethereum smart contracts 
Ethereum Smart Contract Security Best Practices
Examples of Solidity security issues
https://solidity.readthedocs.io/en/latest/security-considerations.html
https://medium.com/insa-tc/ethereum-et-smart-contract-fonctionnement-et-vuln√©rabilit√©-3d37d351a8a9 
